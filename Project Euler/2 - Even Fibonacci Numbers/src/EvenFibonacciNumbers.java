/*
 Project Euler - Problem #2
 
 Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
 */

public class EvenFibonacciNumbers {

	public static void main(String[] args) {
		
		int maxValue = 4_000_000;
				
		int currentNumber = 2;
		int previousNumber = 1;
		int nextNumber = -1;
		
		int[] results = new int[1_000_000];
		
		results[0] = previousNumber;
		results[1] = currentNumber;
		int j = 2;
		
		while(currentNumber < maxValue) {
			nextNumber = currentNumber + previousNumber;
			previousNumber = currentNumber;
			currentNumber = nextNumber;
			results[j] = currentNumber;
			j++;
//			System.out.println(nextNumber);
		}
						
		int evenTest = -1;
		int evenSum = 0;
		
		
		for (int i = 0; i < results.length; i++) {
			
			evenTest = results[i] % 2;
			
			if (evenTest == 0) {
				currentNumber = results[i];
				evenSum += currentNumber;
			}
		} // end for
//		
		System.out.println(evenSum);
		
	}

}
